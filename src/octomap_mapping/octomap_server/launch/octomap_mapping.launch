<?xml version="1.0"?>
<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.1" />

		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<!--<param name="frame_id" type="string" value="odom_combined" />-->
		<param name="frame_id" type="string" value="odom" />

    <param name="filter_ground" value="true"/>
    <param name="ground_filter/plane_distance" value="1"/>
    <param name="base_frame_id" value="/odom" />

		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="20.0" />

		<!-- data source to integrate (PointCloud2) -->
    <!-- Linxius
		<remap from="cloud_in" to="/velodyne_points" />
		<remap from="cloud_in" to="/velodyne_cloud_registered" />
    -->
    <param name="base_frame_id" value="/odom" />
		<remap from="cloud_in" to="/slam_points" />

	</node>
</launch>
